% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model-estimates.R
\name{nc_estimate_links}
\alias{nc_estimate_links}
\alias{nc_estimate_exposure_links}
\alias{nc_estimate_outcome_links}
\title{Compute model estimates between an external (exposure or outcome) variable
and a network.}
\usage{
nc_estimate_exposure_links(
  data,
  edge_tbl,
  exposure,
  adjustment_vars = NA,
  model_function,
  model_arg_list = NULL,
  exponentiate = FALSE,
  implementation = c("updated", "original")
)

nc_estimate_outcome_links(
  data,
  edge_tbl,
  outcome,
  adjustment_vars = NA,
  model_function,
  model_arg_list = NULL,
  exponentiate = FALSE,
  implementation = c("updated", "original")
)
}
\arguments{
\item{data}{The data.frame or tibble that contains the variables of interest,
including the variables passed to the network.}

\item{edge_tbl}{Output graph object from \code{nc_estimate_network()}.}

\item{exposure, outcome}{Character. The exposure or outcome variable of interest.}

\item{adjustment_vars}{Optional. Variables to adjust for in the models.}

\item{model_function}{A function for the model to use (e.g. \code{\link[stats:lm]{stats::lm()}},
\code{\link[stats:glm]{stats::glm()}}, survival::coxph()). Can be any model as long as the
function has the arguments \code{formula} and \code{data}.}

\item{model_arg_list}{Optional. A list containing the named arguments that
will be passed to the model function. A simple example would be
\code{list(family = binomial(link = "logit"))} to specify that the \code{glm} model
is a logistic model and not a linear one. See the examples for more on the
usage.}

\item{exponentiate}{Logical. Whether to exponentiate the log estimates, as
computed with e.g. logistic regression models.}

\item{external_var}{Argument for internal function. The variable that links
to the network variables ("external" to the network).}

\item{external_side}{Argument for internal function. Character vector.
Either "exposure" or "outcome", to indicate which side the external
variable is on relative to the network.
\itemize{
\item Exposure indicating the implied directionality is from the external
variable to the network variable.
\item Outcome indicating the implied directionality is from the network variable
to the external variable.
}}
}
\value{
Outputs a \link[tibble:tibble-package]{tibble} that contains the model
estimates from either the exposure or outcome side of the network.
}
\description{
\lifecycle{experimental}

TODO: Describe more here (fill out vignette first).
\itemize{
\item \code{nc_estimate_exposure_links()}: Computes the model estimates for the exposure side.
\item \code{nc_estimate_outcome_links()}: Computes the model estimates for the exposure side.
}
}
\examples{

\dontrun{
library(dplyr)
standardized_data <- simulated_data \%>\%
    nc_standardize(starts_with("metabolite"))

metabolite_network <- simulated_data \%>\%
    nc_standardize(starts_with("metabolite"),
                   regressed_on = "age") \%>\%
    nc_estimate_network(starts_with("metabolite"))
edge_table <- as_edge_tbl(metabolite_network)

standardized_data \%>\%
  nc_estimate_exposure_links(
    edge_tbl = edge_table,
    exposure = "exposure",
    model_function = lm
   )

# Using a logistic regression
standardized_data \%>\%
  nc_estimate_outcome_links(
    edge_tbl = edge_table,
    outcome = "case_status",
    model_function = glm,
    adjustment_vars = "age",
    model_arg_list = list(family = binomial(link = "logit")),
    exponentiate = TRUE
  )

# Adding random confounders to adjust for
standardized_data \%>\%
  mutate(Random = rnorm(nrow(.)),
         Sex = sample(rep(c("F", "M"), times = nrow(.) / 2))) \%>\%
  nc_estimate_exposure_links(
    edge_tbl = edge_table,
    exposure = "exposure",
    adjustment_vars = c("age", "Random", "Sex"),
    model_function = lm
   )
}

}
